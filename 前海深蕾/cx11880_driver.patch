diff -uN old/patch_conexant.c new/patch_conexant.c
--- old/patch_conexant.c	2020-10-26 17:16:00.701467900 +0800
+++ new/patch_conexant.c	2020-11-30 14:07:31.492545390 +0800
@@ -214,6 +214,7 @@
 	CXT_FIXUP_HP_GATE_MIC,
 	CXT_FIXUP_MUTE_LED_GPIO,
 	CXT_FIXUP_HEADSET_MIC,
+	CXT_PINCFG_LENOVO_E490,
 	CXT_FIXUP_HP_MIC_NO_PRESENCE,
 };
 
@@ -703,6 +704,15 @@
 	{}
 };
 
+/* ThinkPad E490 & co with cxt11880 */
+static const struct hda_pintbl cxt_pincfg_lenovo_e490[] = {
+	{ 0x16, 0x03211040 }, /* Line OUT */
+	{ 0x18, 0x03211040 }, /* Line IN/mic */
+	{ 0x1A, 0x95A60120 }, /* Internal mic */
+	{ 0x17, 0x91170110 }, /* SPK */
+	{}
+};
+
 static const struct hda_fixup cxt_fixups[] = {
 	[CXT_PINCFG_LENOVO_X200] = {
 		.type = HDA_FIXUP_PINS,
@@ -837,6 +847,10 @@
 		.type = HDA_FIXUP_FUNC,
 		.v.func = cxt_fixup_headset_mic,
 	},
+	[CXT_PINCFG_LENOVO_E490] = {
+		.type = HDA_FIXUP_PINS,
+		.v.pins = cxt_pincfg_lenovo_e490,
+	},
 	[CXT_FIXUP_HP_MIC_NO_PRESENCE] = {
 		.type = HDA_FIXUP_PINS,
 		.v.pins = (const struct hda_pintbl[]) {
@@ -954,6 +968,17 @@
 	{}
 };
 
+static const struct snd_pci_quirk cxt11880_fixups[] = {
+	SND_PCI_QUIRK(0x17aa, 0x5072, "Lenovo E490", CXT_PINCFG_LENOVO_E490),
+	{}
+};
+
+static const struct hda_model_fixup cxt11880_fixup_models[] = {
+	{ .id = CXT_PINCFG_LENOVO_E490, .name = "lenovo-e490" },
+	{}
+};
+
+
 /* add "fake" mute amp-caps to DACs on cx5051 so that mixer mute switches
  * can be created (bko#42825)
  */
@@ -1014,6 +1039,12 @@
 		break;
 	case 0x14f150f2:
 		codec->power_save_node = 1;
+	case 0x14f11f86:   /* E490 CODEC VENDOR ID+DEV ID */
+		spec->gen.mixer_nid = 0x15;
+		spec->gen.add_stereo_mix_input = HDA_HINT_STEREO_MIX_AUTO;
+		snd_hda_pick_fixup(codec, cxt11880_fixup_models,
+				   cxt11880_fixups, cxt_fixups);
+		break;
 		/* Fall through */
 	default:
 		codec->pin_amp_workaround = 1;
@@ -1073,7 +1104,7 @@
  */
 
 static const struct hda_device_id snd_hda_id_conexant[] = {
-	HDA_CODEC_ENTRY(0x14f11f86, "CX8070", patch_conexant_auto),
+	HDA_CODEC_ENTRY(0x14f11f86, "CX11880", patch_conexant_auto),
 	HDA_CODEC_ENTRY(0x14f12008, "CX8200", patch_conexant_auto),
 	HDA_CODEC_ENTRY(0x14f15045, "CX20549 (Venice)", patch_conexant_auto),
 	HDA_CODEC_ENTRY(0x14f15047, "CX20551 (Waikiki)", patch_conexant_auto),
